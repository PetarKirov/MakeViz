<UserControl x:Class="FunctionPlotter.Views.FunctionPanelControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FunctionPlotter"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" 
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                               StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFDDDDDD"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True"
                                CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Path Width="15.5"
                                  Height="12.3319997787476"
                                  Margin="3 0 7 0"
                                  HorizontalAlignment="Left"
                                  Data="M0,6 L7,10 L14,0"
                                  Stretch="Fill"
                                  Stroke="#FF67BE2E"
                                  StrokeThickness="4"
                                  UseLayoutRounding="False"
                                  ToolTip="The function is a valid expression"
                                  x:Name="OkSymbol"/>
                            <Path Width="14"
                                  Height="14"
                                  Margin="3 0 7 0"
                                  Data="M5.5,0 L9.5,0 L9.5,5.5 L15,5.5 L15,9.5 L9.5,9.5 L9.5,15 L5.5,15 L5.5,9.5 L0,9.5 L0,5.5 L5.5,5.5 z"
                                  Fill="#FFEB2020"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill"
                                  StrokeThickness="0"
                                  UseLayoutRounding="False"
                                  ToolTip="The function is not valid expression!"
                                  x:Name="CrossSymbol">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="-45" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="OkSymbol" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="CrossSymbol" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Visibility" TargetName="OkSymbol" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="CrossSymbol" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="OkSymbol" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="CrossSymbol" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" x:Name="addFunctionButtonPanel">
            <Button Content="+ Real Function"
                    Style="{StaticResource ButtonStyle1}"
                    Tag="RF"
                    Click="AddFunctionButton_Click"/>
            <Button Content="+ Inverse Real Function"
                    Style="{StaticResource ButtonStyle1}"
                    Tag="IRF"
                    Click="AddFunctionButton_Click"/>
        </StackPanel>

        <Grid x:Name="functionPanel" Visibility="Collapsed" VerticalAlignment="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBox Grid.Row="0" Text="{Binding FunctionBeingEdited.Function.FunctionString, UpdateSourceTrigger=PropertyChanged}"/>

            <DockPanel Grid.Row="1">
                <CheckBox DockPanel.Dock="Left" IsChecked="{Binding FunctionBeingEdited.Function.IsValid}" Style="{StaticResource CheckBoxStyle1}"/>

                <Button DockPanel.Dock="Right" Content="Discard Changes" x:Name="discardButton" Click="DiscardButton_Click"/>

                <Button DockPanel.Dock="Right" Content="Save" IsEnabled="{Binding FunctionBeingEdited.Function.IsValid}" Click="SaveButton_Click"/>

                <Rectangle Fill="Transparent" DockPanel.Dock="Right" />
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>
